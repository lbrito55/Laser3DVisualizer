import { Vector3, SceneLoaderProgressEvent } from "babylonjs";
import { LoadedModel } from "./Model";
import { SceneComponentProps, PropsHandler } from "./SceneComponent";
export declare type ModelProps = {
    meshNames?: any;
    receiveShadows?: boolean;
    rootUrl: string;
    sceneFilename: string;
    pluginExtension?: string;
    position?: Vector3;
    scaling?: Vector3;
    rotation?: Vector3;
    showBoundingBox: boolean;
    /**
     * Only used on init.  Will not update dynamically (scaling will update dynamically and override this)
     */
    scaleToDimension?: number;
    onModelLoaded?: (model: LoadedModel) => void;
    onModelError?: (model: LoadedModel) => void;
    onLoadProgress?: (event: SceneLoaderProgressEvent) => void;
} & SceneComponentProps<LoadedModel>;
export default class ModelPropsHandler implements PropsHandler<LoadedModel, ModelProps> {
    handle(loadedModel: LoadedModel, props: ModelProps): void;
}
