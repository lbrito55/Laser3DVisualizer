import { Scene, EventState } from "babylonjs";
import { Button as BabylonButton, Control, Vector2WithInfo } from "babylonjs-gui";
import { SceneComponentProps } from "./SceneComponent";
import GUI2DSceneComponent from "./GUI2DSceneComponent";
import ControlPropsHandler from "./2DControlProps";
import { RectangleProps, RectanglePropsHandler } from "./Rectangle";
import ContainerPropsHandler from "./ContainerProps";
export declare type ButtonProps = {
    /**
     * Only assignable on creation. No props listeners.
     */
    onPointerDown: (vector2WithInfo: Vector2WithInfo, state: EventState) => void;
} & RectangleProps & SceneComponentProps<BabylonButton>;
/**
 * 2D Button
 */
export default class Button extends GUI2DSceneComponent<BabylonButton, BabylonButton, ButtonProps> {
    protected button?: BabylonButton;
    componentsCreated(): void;
    addControl(control: Control): void;
    removeControl(control: Control): void;
    create(scene: Scene): BabylonButton;
    readonly propsHandlers: (ControlPropsHandler | ContainerPropsHandler | RectanglePropsHandler)[];
}
