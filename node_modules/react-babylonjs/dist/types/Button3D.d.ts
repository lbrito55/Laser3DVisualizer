import { Scene, Color3 } from "babylonjs";
import { Button3D as BabylonButton3D, Control3D } from "babylonjs-gui";
import { SceneComponentProps } from "./SceneComponent";
import GUI3DSceneComponent from "./GUI3DSceneComponent";
export declare type Button3DProps = {
    text?: string;
    fontColor?: Color3;
    fontSize?: string;
    imageUrl?: string;
    imageHeight?: number;
    imageWidth?: number;
    /**
     * By default the buttons have a reddish hue
     */
    diffuseColor?: Color3;
    /**
     * By default on hover the button will havea a Red emmissive color attached.  Use this to specify a different color.
     */
    hoverEmmissiveColor?: Color3;
    onClick: (button: BabylonButton3D) => void;
} & SceneComponentProps<BabylonButton3D>;
/**
 *
 */
export default class Button3D extends GUI3DSceneComponent<BabylonButton3D, BabylonButton3D, Button3DProps> {
    protected button3D?: BabylonButton3D;
    addControl(control: Control3D): void;
    removeControl(control: Control3D): void;
    componentsCreated(): void;
    componentWillUnmount(): void;
    /**
     * The mesh that we would like to set properties on, is created only once the
     *
     * @param button3D button to further initialise
     */
    initComplete(button3D: BabylonButton3D): void;
    create(scene: Scene): BabylonButton3D;
    readonly propsHandlers: never[];
}
