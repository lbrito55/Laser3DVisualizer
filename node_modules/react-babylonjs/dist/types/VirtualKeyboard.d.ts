import { Scene } from "babylonjs";
import { VirtualKeyboard as BabylonVirtualKeyboard, Control } from "babylonjs-gui";
import ContainerPropsHandler, { ContainerProps } from "./ContainerProps";
import ControlPropsHandler from "./2DControlProps";
import { SceneComponentProps } from "./SceneComponent";
import GUI2DSceneComponent from "./GUI2DSceneComponent";
export declare type VirtualKeyboardProps = {
    controlNames?: string[];
} & ContainerProps & SceneComponentProps<BabylonVirtualKeyboard>;
/**
 * Cannot be attached directly to a 3D panel.
 */
export default class VirtualKeyboard extends GUI2DSceneComponent<BabylonVirtualKeyboard, BabylonVirtualKeyboard, VirtualKeyboardProps> {
    protected virtualKeyboard?: BabylonVirtualKeyboard;
    private keyboardConnected;
    componentsCreated(): void;
    addControl(control: Control): void;
    removeControl(control: Control): void;
    create(scene: Scene): BabylonVirtualKeyboard;
    readonly propsHandlers: (ControlPropsHandler | ContainerPropsHandler)[];
}
