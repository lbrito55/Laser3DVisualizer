import { PropsHandler, NodeProps } from "./SceneComponent";
import { Camera } from "babylonjs";
export interface CameraComponent {
    camera: Camera;
    noPreventDefault: boolean;
}
export declare type CameraProps = {
    /**
     * If there are no active cameras (on instantiation) then this camera becomes the active camera.
     */
    setActiveOnSceneIfNoneActive?: boolean;
    /**
     * Defaults to 1 meter (defines the clip plane for projection matrix)
     */
    minZ?: number;
    /**
     * Defaults to 10,000 meters
     */
    maxZ?: number;
    /**
     * FOV is set in Radians (default is 0.8)
     */
    fov?: number;
    /**
     * fovMode sets the camera frustum bounds to the viewport bounds. (default is FOVMODE_VERTICAL_FIXED)
     */
    fovMode?: number;
    /**
     * By default noPreventDefault is set to false, meaning that preventDefault() is automatically called on all canvas mouse clicks and touch events.
     */
    noPreventDefault?: boolean;
} & NodeProps;
export declare class CameraPropsHandler implements PropsHandler<Camera, CameraProps> {
    handle(camera: Camera, props: CameraProps): void;
}
